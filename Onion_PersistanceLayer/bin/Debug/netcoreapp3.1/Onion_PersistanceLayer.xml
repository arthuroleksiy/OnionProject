<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Onion_PersistanceLayer</name>
    </assembly>
    <members>
        <member name="T:Onion_PersistanceLayer.MockActiveUserRepository">
            <summary>
            Represents current user
            </summary>
        </member>
        <member name="P:Onion_PersistanceLayer.MockActiveUserRepository.CurrentUser">
            <summary>
            <see cref="T:Onion_DomainLayer.IRole"/> value
            </summary>
        </member>
        <member name="P:Onion_PersistanceLayer.MockActiveUserRepository.Login">
            <summary>
            Login value
            </summary>
        </member>
        <member name="M:Onion_PersistanceLayer.MockActiveUserRepository.WhoISLogged">
            <summary>
            Returns type of current 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Onion_PersistanceLayer.MockActiveUserRepository.GetId">
            <summary>
            Gets id of current user
            </summary>
            <returns></returns>
        </member>
        <member name="T:Onion_PersistanceLayer.MockAssortementRepsotory">
            <summary>
            The MockAssortementRepsotory class.
            Contains all data and methods for operating supermarket assortement.
            </summary>
        </member>
        <member name="P:Onion_PersistanceLayer.MockAssortementRepsotory.Assortement">
            <value>
            returns Collection of <see cref="T:Onion_DomainLayer.IItem"/> assortment
            </value>
        </member>
        <member name="M:Onion_PersistanceLayer.MockAssortementRepsotory.GetLastId">
            <summary>
            Gets last id
            </summary>
            <returns>Last int id</returns>
        </member>
        <member name="M:Onion_PersistanceLayer.MockAssortementRepsotory.GetItemById(System.Int32)">
            <summary>
            Gets item of specific id
            </summary>
            <param name="id"></param>
            <returns><see cref="T:Onion_DomainLayer.IItem"/> value</returns>
        </member>
        <member name="T:Onion_PersistanceLayer.MockBucketOrderRepository">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:Onion_PersistanceLayer.MockBucketOrderRepository.Orders">
            <summary>
            Collectoin of <see cref="T:Onion_DomainLayer.Order"/>
            </summary>
        </member>
        <member name="M:Onion_PersistanceLayer.MockBucketOrderRepository.ChangeStatus(System.Int32,Onion_DomainLayer.Status)">
            <summary>
            Changes order status
            </summary>
            <param name="id"></param>
            <param name="newStatus"><see cref="T:Onion_DomainLayer.Status"/> value</param>
        </member>
        <member name="M:Onion_PersistanceLayer.MockBucketOrderRepository.AddOrderByParameters(Onion_DomainLayer.Order)">
            <summary>
            Add new orderr
            </summary>
            <param name="order"><see cref="T:Onion_DomainLayer.Order"/></param>
        </member>
        <member name="M:Onion_PersistanceLayer.MockBucketOrderRepository.ChangeItemById``1(System.Int32,``0)">
            <summary>
            Change item by id
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <param name="quantity"></param>
            <returns>value of <see cref="T:Onion_DomainLayer.IItem"/></returns>
        </member>
        <member name="M:Onion_PersistanceLayer.MockBucketOrderRepository.GetLastId">
            <summary>
            Last Order index
            </summary>
            <returns>int index</returns>
        </member>
        <member name="T:Onion_PersistanceLayer.MockOrderHistoryRepository">
            <summary>
            Repository with history of orders
            </summary>
        </member>
        <member name="F:Onion_PersistanceLayer.MockOrderHistoryRepository.Orders">
            <summary>
            Collection of <see cref="T:Onion_DomainLayer.Order"/>
            </summary>
        </member>
        <member name="M:Onion_PersistanceLayer.MockOrderHistoryRepository.AddOrder(Onion_DomainLayer.Status,System.Collections.Generic.IEnumerable{Onion_DomainLayer.IItem},System.DateTime,Onion_DomainLayer.RegisteredUser)">
            <summary>
            Add new <see cref="T:Onion_DomainLayer.Order"/> by parameters
            </summary>
            <param name="status"></param>
            <param name="items"></param>
            <param name="date"></param>
            <param name="user"></param>
        </member>
        <member name="M:Onion_PersistanceLayer.MockOrderHistoryRepository.AddOrderByParameters(Onion_DomainLayer.Order)">
            <summary>
            Add <see cref="T:Onion_DomainLayer.Order"/> to orders list
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Onion_PersistanceLayer.MockOrderHistoryRepository.GetLastId">
            <summary>
            Gets last id
            </summary>
            <returns>Last int id</returns>
        </member>
        <member name="M:Onion_PersistanceLayer.MockOrderHistoryRepository.ChangeItemById``1(System.Int32,``0)">
            <summary>
            Change <see cref="T:Onion_DomainLayer.IItem"/> by specific id
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <param name="quantity"></param>
            <returns><see cref="T:Onion_DomainLayer.IItem"/> value</returns>
        </member>
        <member name="T:Onion_PersistanceLayer.MockRegisteredUserRepository">
            <summary>
            Create repository with registered users
            </summary>
        </member>
        <member name="P:Onion_PersistanceLayer.MockRegisteredUserRepository.AllUsers">
            <summary>
            Collection of <see cref="T:Onion_DomainLayer.RegisteredUser"/>
            </summary>
        </member>
        <member name="M:Onion_PersistanceLayer.MockRegisteredUserRepository.Contains(System.String)">
            <summary>
            Do system contains login
            </summary>
            <param name="login"></param>
            <returns>bool value</returns>
        </member>
        <member name="M:Onion_PersistanceLayer.MockRegisteredUserRepository.GetUserById(System.Int32)">
            <summary>
            Get <see cref="T:Onion_DomainLayer.RegisteredUser"/> bu id
            </summary>
            <param name="id"></param>
            <returns><see cref="T:Onion_DomainLayer.RegisteredUser"/> object</returns>
        </member>
        <member name="M:Onion_PersistanceLayer.MockRegisteredUserRepository.GetLastId">
            <summary>
            Get last id
            </summary>
            <returns>int id</returns>
        </member>
    </members>
</doc>
